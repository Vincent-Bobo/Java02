@startuml
class Line {
  -Position[] positions
  +void put(Linable linable, int i)
  +Linable get(int i)
  +Linable[] toArray()
}

class Position {
  -Linable linable
  +void setLinable(Linable linable)
}

class Geezer {
  -Sorter sorter
  -Geezer theGeezer
  +static Geezer getTheGeezer()
  +void setSorter(Sorter sorter)
  +String lineUp(Line line)
  +String[] parsePlan(String plan)
  +void execute(String step)
}

interface Sorter {
  +void load(int[] elements)
  +void sort()
  +String getPlan()
}

class BubbleSorter {
  -int[] a
  -String plan
  +void load(int[] elements)
  +void sort()
  +String getPlan()
}

interface Linable {
  +void setPosition(Position position)
  +Position getPosition()
  +int getValue()
}

enum Gourd {
  ONE, TWO, THREE, FOUR, FIVE, SIX, SEVEN
  -int r, g, b
  -Position position
  +static Gourd getGourdByRank(int rank)
  +int rank()
  +void setPosition(Position position)
  +Position getPosition()
  +void swapPosition(Gourd another)
  +int getValue()
}

Line --> Position
Position --> Linable
Geezer --> Sorter
Geezer --> Line
BubbleSorter ..|> Sorter
Gourd ..|> Linable
@enduml